{"version":3,"sources":["Components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabChangeMethod","tabs","selectedTabId","selectedObj","find","tab","id","className","map","classNames","active","type","name","title","onClick","content","App","useState","selectedTab","setSelectedTab","length","newTab","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAEhD,OACE,sBAAKK,UAAU,OAAf,UACE,8BACGN,EAAKO,KAAI,SAAAH,GAAG,OACX,wBAEEE,UAAWE,IACT,eAAgB,CAAEC,OAAQL,EAAIC,KAAOJ,IAEvCS,KAAK,SACLC,KAAMP,EAAIQ,MACVC,QAAS,kBAAMd,EAAgBK,IAPjC,SASGA,EAAIQ,OARAR,EAAIC,SAYf,oBAAIC,UAAU,cAAd,UACc,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAaY,UAAW,mBC9B3Bd,G,MAAc,CAClB,CAAEK,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,iBAmC3BC,EAhCO,WACpB,MAAsCC,mBAAShB,EAAK,IAAM,IAA1D,mBAAOiB,EAAP,KAAoBC,EAApB,KAQA,OACE,sBAAKZ,UAAU,MAAf,UACE,qBAAIA,UAAU,cAAd,6BAEG,IACAW,EAAYL,SAGbZ,EAAKmB,OAAS,EAEZ,cAAC,EAAD,CACEnB,KAAMA,EACNC,cAAegB,EAAYZ,GAC3BN,gBAnBY,SAACqB,GACjBA,EAAOf,KAAOY,EAAYZ,IAC5Ba,EAAeE,MAqBX,+DClCVC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e675b4b4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Tabs.scss';\n\ntype Props = {\n  tabChangeMethod: (tabId: Tab) => void,\n  tabs: Tab[],\n  selectedTabId: string,\n};\n\nexport const Tabs:React.FC<Props> = ({\n  tabChangeMethod,\n  tabs,\n  selectedTabId,\n}) => {\n  const selectedObj = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"tabs\">\n      <div>\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            className={classNames(\n              'tabs__button', { active: tab.id === selectedTabId },\n            )}\n            type=\"button\"\n            name={tab.title}\n            onClick={() => tabChangeMethod(tab)}\n          >\n            {tab.title}\n          </button>\n        ))}\n      </div>\n      <h2 className=\"tabs__title\">\n        {selectedObj?.content || 'No content'}\n      </h2>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './Components/Tabs/Tabs';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0] || {});\n\n  const onTabSelected = (newTab: Tab) => {\n    if (newTab.id !== selectedTab.id) {\n      setSelectedTab(newTab);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__header\">\n        Selected tab is:\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      { tabs.length > 0\n        ? (\n          <Tabs\n            tabs={tabs}\n            selectedTabId={selectedTab.id}\n            tabChangeMethod={onTabSelected}\n          />\n        )\n\n        : <p>Do not acsept correct tabs</p>}\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}